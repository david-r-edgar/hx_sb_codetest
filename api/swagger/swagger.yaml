swagger: "2.0"
info:
  version: "0.0.1"
  title: Short Breaks code test
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /user/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: "user"
    get:
      description: "Gets the user with the specified id"
      # used as the method name of the controller
      operationId: "getUser"
      produces:
      - "application/json"
      parameters:
        - name: "id"
          in: path
          description: "id of user to return"
          required: true
          type: integer
      responses:
        200:
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/User"
        400:
          description: "Invalid ID"
          schema:
             $ref: "#/definitions/ErrorResponse"
    delete:
      description: "Deletes the user with the specified id"
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
        - name: "id"
          in: path
          description: "id of user to delete"
          required: true
          type: integer
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/UserApiResponse"
        400:
          description: "Invalid ID"
          schema:
             $ref: "#/definitions/ErrorResponse"
    put:
      description: "User details will be updated for the given user id"
      operationId: "updateUser"
      parameters:
        - name: "id"
          in: path
          description: "id of user to update"
          required: true
          type: integer
        - name: "user"
          in: body
          description: "User object containing email, forename and surname. All these fields are optional."
          required: false
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: "Success. Full user object returned in body."
          schema:
            $ref: "#/definitions/User"
  /user:
    x-swagger-router-controller: user
    post:
      description: "Adds a new user"
      operationId: "addUser"
      parameters:
        - name: "user"
          in: body
          description: "User object, in which the email, forename and surname should be set."
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: "Success. Location returned in header; full user object returned in body."
          headers:
            Location:
              type: string
              format: url
              description: "Relative URL of the new user"
          schema:
            $ref: "#/definitions/User"
    
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
        readOnly: true
      email:
        type: "string"
      forename:
        type: "string"
      surname:
        type: "string"
      created:
        type: "string"
        format: "date-time"
        readOnly: true
  UserApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string

